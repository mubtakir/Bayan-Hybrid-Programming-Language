[
  "tests/test_bayan_modules.py::test_from_import_bayan_module_class",
  "tests/test_bayan_modules.py::test_from_import_bayan_module_function",
  "tests/test_bayan_modules.py::test_import_bayan_module_var_and_func",
  "tests/test_dunder_extras.py::test_bool_dunder_in_condition_and_not",
  "tests/test_dunder_extras.py::test_callable_dunder",
  "tests/test_dunder_extras.py::test_contains_operator",
  "tests/test_dunder_extras.py::test_iter_for_loop",
  "tests/test_dunder_extras.py::test_repr_dunder",
  "tests/test_error_reporting.py::test_colored_code_frame_optional",
  "tests/test_error_reporting.py::test_error_message_includes_code_frame",
  "tests/test_error_reporting.py::test_indexing_error_stack_trace",
  "tests/test_error_reporting.py::test_missing_attribute_stack_trace",
  "tests/test_error_reporting.py::test_undefined_name_suggestions",
  "tests/test_error_reporting.py::test_undefined_variable_stack_trace",
  "tests/test_hybrid_interpreter.py::test_arabic_identifiers_hybrid",
  "tests/test_hybrid_interpreter.py::test_complex_predicates",
  "tests/test_hybrid_interpreter.py::test_family_relations",
  "tests/test_hybrid_interpreter.py::test_function_in_hybrid",
  "tests/test_hybrid_interpreter.py::test_hybrid_block_mixed",
  "tests/test_hybrid_interpreter.py::test_hybrid_block_traditional",
  "tests/test_hybrid_interpreter.py::test_if_with_logical_condition",
  "tests/test_hybrid_interpreter.py::test_logical_fact",
  "tests/test_hybrid_interpreter.py::test_logical_query",
  "tests/test_hybrid_interpreter.py::test_logical_rule",
  "tests/test_hybrid_interpreter.py::test_multiple_facts",
  "tests/test_hybrid_interpreter.py::test_nested_hybrid_structures",
  "tests/test_imports.py::test_from_import",
  "tests/test_imports.py::test_from_import_multiple",
  "tests/test_imports.py::test_import_math",
  "tests/test_imports.py::test_import_random",
  "tests/test_imports.py::test_import_with_alias",
  "tests/test_imports.py::test_unsafe_module_import",
  "tests/test_indexing.py::test_bayan_object_get_set_item",
  "tests/test_indexing.py::test_python_list_index_get",
  "tests/test_inheritance.py::test_dunder_add_and_str_and_eq",
  "tests/test_inheritance.py::test_inheritance_method_resolution",
  "tests/test_inheritance.py::test_super_init",
  "tests/test_inheritance.py::test_super_override",
  "tests/test_lexer.py::test_arabic_identifiers",
  "tests/test_lexer.py::test_basic_tokens",
  "tests/test_lexer.py::test_comments",
  "tests/test_lexer.py::test_hybrid_block",
  "tests/test_lexer.py::test_keywords",
  "tests/test_lexer.py::test_logical_tokens",
  "tests/test_lexer.py::test_numbers",
  "tests/test_lexer.py::test_operators",
  "tests/test_lexer.py::test_strings",
  "tests/test_logical_engine.py::test_complex_rule",
  "tests/test_logical_engine.py::test_fact_addition",
  "tests/test_logical_engine.py::test_multiple_solutions",
  "tests/test_logical_engine.py::test_occurs_check",
  "tests/test_logical_engine.py::test_predicate_creation",
  "tests/test_logical_engine.py::test_rule_application",
  "tests/test_logical_engine.py::test_simple_query",
  "tests/test_logical_engine.py::test_term_creation",
  "tests/test_logical_engine.py::test_unification",
  "tests/test_multiple_inheritance.py::test_mi_diamond_c3",
  "tests/test_multiple_inheritance.py::test_mi_linearization_left_to_right",
  "tests/test_multiple_inheritance.py::test_mi_super_moves_along_mro",
  "tests/test_oop.py::test_attribute_access",
  "tests/test_oop.py::test_class_definition",
  "tests/test_oop.py::test_method_call",
  "tests/test_oop.py::test_multiple_objects",
  "tests/test_oop.py::test_object_instantiation",
  "tests/test_super_syntax.py::test_super_legacy_and_pythonic_equivalence",
  "tests/test_traditional_interpreter.py::test_arithmetic",
  "tests/test_traditional_interpreter.py::test_basic_assignment",
  "tests/test_traditional_interpreter.py::test_boolean_operations",
  "tests/test_traditional_interpreter.py::test_comparison_operations",
  "tests/test_traditional_interpreter.py::test_dict_operations",
  "tests/test_traditional_interpreter.py::test_for_loop",
  "tests/test_traditional_interpreter.py::test_function_call",
  "tests/test_traditional_interpreter.py::test_function_definition",
  "tests/test_traditional_interpreter.py::test_if_statement",
  "tests/test_traditional_interpreter.py::test_list_operations",
  "tests/test_traditional_interpreter.py::test_nested_structures",
  "tests/test_traditional_interpreter.py::test_print_statement",
  "tests/test_traditional_interpreter.py::test_string_operations",
  "tests/test_traditional_interpreter.py::test_while_loop"
]